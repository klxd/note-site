{"version":3,"sources":["webpack:///path---java-future-adc3c6b39a5d8aae7d59.js","webpack:///./.cache/json/java-future.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/java-future.json","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","tableOfContents","frontmatter","date","tags","pathContext","path"],"mappings":"AAAAA,cAAc,mBAERC,qEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,YAAAC,OAAA,UAAsCC,gBAAmBC,GAAA,uHAAAC,KAAA,qpPAAsiQC,gBAAA,6NAAAC,aAA0SN,MAAA,iBAAAO,KAAA,mBAAAC,MAAA,WAAqEC,aAAgBC,KAAA","file":"path---java-future-adc3c6b39a5d8aae7d59.js","sourcesContent":["webpackJsonp([6212169691057800000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/java-future.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Note Site\",\"author\":\"stone\"}},\"markdownRemark\":{\"id\":\"/home/peng/develop/workspace/stone-site/src/pages/2018-01-06-java-future/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2 id=\\\"future接口简介\\\"><a href=\\\"#future%E6%8E%A5%E5%8F%A3%E7%AE%80%E4%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Future接口简介</h2>\\n<p>Future接口在Java5中被引入,设计初衷是对未来某个时刻发生的结果进行建模.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Future</span><span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 尝试取消此任务:\\n     * 若任务已经完成或者被取消,则不做任何操作\\n     * 若任务还未开始,则此任务将被取消,即永远不会开始\\n     * 若任务已经开始,则通过传入参数决定是否打断执行任务的线程\\n     *\\n     * 此函数返回之后,接下来调用{@link #isDone}或{@link #isCancelled}\\n     * 永远只会返回{@code true}\\n     * @param mayInterruptIfRunning 是否打断正在执行此任务的线程\\n     * @return {@code false} if the task could not be cancelled,\\n     * typically because it has already completed normally;\\n     * {@code true} otherwise\\n     */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">cancel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">boolean</span> mayInterruptIfRunning<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * @return 此任务是否在执行完毕之前被取消\\n     */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">isCancelled</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 返回任务是否完成\\n     * 完成的判定,以下情况均返回true:\\n     * 1. 正常执行结束\\n     * 2. 抛出异常\\n     * 3. 被取消\\n     */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">isDone</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 取回任务的执行结果,若任务未完成,则当前线程进入等待状态\\n     */</span>\\n    V <span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> InterruptedException<span class=\\\"token punctuation\\\">,</span> ExecutionException<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 取回任务的执行结果,若任务未完成,则当前线程等待一定的时间\\n     */</span>\\n    V <span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">long</span> timeout<span class=\\\"token punctuation\\\">,</span> TimeUnit unit<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">throws</span> InterruptedException<span class=\\\"token punctuation\\\">,</span> ExecutionException<span class=\\\"token punctuation\\\">,</span> TimeoutException<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> \\n</code></pre>\\n      </div>\\n<ul>\\n<li>Future只是一个接口,并无法直接用来创建对象</li>\\n</ul>\\n<h2 id=\\\"futuretask类\\\"><a href=\\\"#futuretask%E7%B1%BB\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>FutureTask类</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">RunnableFuture</span><span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Runnable</span><span class=\\\"token punctuation\\\">,</span> Future<span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 将运行得到的结果作为Future的返回值\\n     */</span>\\n    <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FutureTask</span><span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">RunnableFuture</span><span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 使用Callable构造\\n     */</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">FutureTask</span><span class=\\\"token punctuation\\\">(</span>Callable<span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> callable<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n       <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 使用Runnable和预定的result构造 \\n     * 当任务成功执行完成时,result会作为Future的返回值,可为null\\n     */</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">FutureTask</span><span class=\\\"token punctuation\\\">(</span>Runnable runnable<span class=\\\"token punctuation\\\">,</span> V result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"completablefuture类\\\"><a href=\\\"#completablefuture%E7%B1%BB\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>CompletableFuture类</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CompletableFuture</span><span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">Future</span><span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> CompletionStage<span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\",\"tableOfContents\":\"<ul>\\n<li><a href=\\\"#future%E6%8E%A5%E5%8F%A3%E7%AE%80%E4%BB%8B\\\">Future接口简介</a></li>\\n<li><a href=\\\"#futuretask%E7%B1%BB\\\">FutureTask类</a></li>\\n<li><a href=\\\"#completablefuture%E7%B1%BB\\\">CompletableFuture类</a></li>\\n</ul>\",\"frontmatter\":{\"title\":\"Java中的Future接口\",\"date\":\"January 06, 2018\",\"tags\":[\"java\"]}}},\"pathContext\":{\"path\":\"/java-future\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---java-future-adc3c6b39a5d8aae7d59.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Note Site\",\"author\":\"stone\"}},\"markdownRemark\":{\"id\":\"/home/peng/develop/workspace/stone-site/src/pages/2018-01-06-java-future/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2 id=\\\"future接口简介\\\"><a href=\\\"#future%E6%8E%A5%E5%8F%A3%E7%AE%80%E4%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Future接口简介</h2>\\n<p>Future接口在Java5中被引入,设计初衷是对未来某个时刻发生的结果进行建模.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Future</span><span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 尝试取消此任务:\\n     * 若任务已经完成或者被取消,则不做任何操作\\n     * 若任务还未开始,则此任务将被取消,即永远不会开始\\n     * 若任务已经开始,则通过传入参数决定是否打断执行任务的线程\\n     *\\n     * 此函数返回之后,接下来调用{@link #isDone}或{@link #isCancelled}\\n     * 永远只会返回{@code true}\\n     * @param mayInterruptIfRunning 是否打断正在执行此任务的线程\\n     * @return {@code false} if the task could not be cancelled,\\n     * typically because it has already completed normally;\\n     * {@code true} otherwise\\n     */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">cancel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">boolean</span> mayInterruptIfRunning<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * @return 此任务是否在执行完毕之前被取消\\n     */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">isCancelled</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 返回任务是否完成\\n     * 完成的判定,以下情况均返回true:\\n     * 1. 正常执行结束\\n     * 2. 抛出异常\\n     * 3. 被取消\\n     */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">isDone</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 取回任务的执行结果,若任务未完成,则当前线程进入等待状态\\n     */</span>\\n    V <span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> InterruptedException<span class=\\\"token punctuation\\\">,</span> ExecutionException<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 取回任务的执行结果,若任务未完成,则当前线程等待一定的时间\\n     */</span>\\n    V <span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">long</span> timeout<span class=\\\"token punctuation\\\">,</span> TimeUnit unit<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">throws</span> InterruptedException<span class=\\\"token punctuation\\\">,</span> ExecutionException<span class=\\\"token punctuation\\\">,</span> TimeoutException<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> \\n</code></pre>\\n      </div>\\n<ul>\\n<li>Future只是一个接口,并无法直接用来创建对象</li>\\n</ul>\\n<h2 id=\\\"futuretask类\\\"><a href=\\\"#futuretask%E7%B1%BB\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>FutureTask类</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">RunnableFuture</span><span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Runnable</span><span class=\\\"token punctuation\\\">,</span> Future<span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 将运行得到的结果作为Future的返回值\\n     */</span>\\n    <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FutureTask</span><span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">RunnableFuture</span><span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 使用Callable构造\\n     */</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">FutureTask</span><span class=\\\"token punctuation\\\">(</span>Callable<span class=\\\"token operator\\\">&lt;</span>V<span class=\\\"token operator\\\">></span> callable<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n       <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * 使用Runnable和预定的result构造 \\n     * 当任务成功执行完成时,result会作为Future的返回值,可为null\\n     */</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">FutureTask</span><span class=\\\"token punctuation\\\">(</span>Runnable runnable<span class=\\\"token punctuation\\\">,</span> V result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"completablefuture类\\\"><a href=\\\"#completablefuture%E7%B1%BB\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>CompletableFuture类</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CompletableFuture</span><span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">Future</span><span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> CompletionStage<span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\",\"tableOfContents\":\"<ul>\\n<li><a href=\\\"#future%E6%8E%A5%E5%8F%A3%E7%AE%80%E4%BB%8B\\\">Future接口简介</a></li>\\n<li><a href=\\\"#futuretask%E7%B1%BB\\\">FutureTask类</a></li>\\n<li><a href=\\\"#completablefuture%E7%B1%BB\\\">CompletableFuture类</a></li>\\n</ul>\",\"frontmatter\":{\"title\":\"Java中的Future接口\",\"date\":\"January 06, 2018\",\"tags\":[\"java\"]}}},\"pathContext\":{\"path\":\"/java-future\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/java-future.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/java-future.json\n// module chunks = 6212169691057800000"],"sourceRoot":""}