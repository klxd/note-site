webpackJsonp([0x56647d20cc258000],{"./node_modules/json-loader/index.js!./.cache/json/java-linked-hash-map.json":function(n,a){n.exports={data:{site:{siteMetadata:{title:"Note Site",author:"stone"}},markdownRemark:{id:"/home/peng/develop/workspace/stone-site/src/pages/2017-11-08-java-linked-hash-map/index.md absPath of file >>> MarkdownRemark",html:'<h1>Java LinkedHashMap</h1>\n<ul>\n<li>HashMap的直接子类</li>\n<li>在HashMap的基础上，采用双向链表将所有的entry链接起来</li>\n<li>能保证迭代顺序与插入顺序相同</li>\n<li>未实现同步（不是线程安全）</li>\n<li>*</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedHashMap</span><span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span>\n    <span class="token keyword">extends</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span>\n    <span class="token keyword">implements</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span>\n<span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">/**\n     * The head (eldest) of the doubly linked list.\n     * -- 双向链表的表头元素\n     */</span>\n    <span class="token keyword">transient</span> LinkedHashMap<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span> head<span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">/**\n     * The tail (youngest) of the doubly linked list.\n     * -- 双向链表的表尾元素\n     */</span>\n    <span class="token keyword">transient</span> LinkedHashMap<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span> tail<span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">/**\n     * The iteration ordering method for this linked hash map: &lt;tt>true&lt;/tt>\n     * for access-order, &lt;tt>false&lt;/tt> for insertion-order.\n     * -- true　按照访问顺序排序　false 按照插入顺序排序（默认）\n     * @serial\n     */</span>\n    <span class="token keyword">final</span> <span class="token keyword">boolean</span> accessOrder<span class="token punctuation">;</span>\n    \n    <span class="token comment" spellcheck="true">// -- HashMap.Node的直接子类，新增了两个域用于实现双向链表</span>\n    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span><span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span> <span class="token keyword">extends</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span> <span class="token punctuation">{</span>ii\n        Entry<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span> before<span class="token punctuation">,</span> after<span class="token punctuation">;</span>\n        <span class="token function">Entry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> K key<span class="token punctuation">,</span> V value<span class="token punctuation">,</span> Node<span class="token operator">&lt;</span>K<span class="token punctuation">,</span>V<span class="token operator">></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">super</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>',frontmatter:{title:"Java LinkedHashMap",date:"November 08, 2017",tags:["java","java collection framework"]}}},pathContext:{path:"/java-linked-hash-map"}}}});
//# sourceMappingURL=path---java-linked-hash-map-be7c67971806ef4a058f.js.map