{"version":3,"sources":["webpack:///path---java-thread-local-7f481334cbd179ec5b2b.js","webpack:///./.cache/json/java-thread-local.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/java-thread-local.json","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","tags","pathContext","path"],"mappings":"AAAAA,cAAc,qBAERC,2EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,YAAAC,OAAA,UAAsCC,gBAAmBC,GAAA,6HAAAC,KAAA,wPAAAC,aAAgZL,MAAA,oBAAAM,KAAA,oBAAAC,MAAA,WAAyEC,aAAgBC,KAAA","file":"path---java-thread-local-7f481334cbd179ec5b2b.js","sourcesContent":["webpackJsonp([10420783750355646000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/java-thread-local.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Note Site\",\"author\":\"stone\"}},\"markdownRemark\":{\"id\":\"/home/peng/develop/workspace/stone-site/src/pages/2017-11-20-java-thread-local/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h1>Java Thread Local</h1>\\n<h2>线程封闭</h2>\\n<p>当访问共享的可变数据时,通常需要使用同步.一种避免使用同步的方式就是不共享数据,如果仅在单线程内访问数据,\\n就不需要同步,这种数据被称为<strong>线程封闭</strong>(Thread Confinement)</p>\\n<h2>ThreadLocal类</h2>\\n<p>维持线程封闭性的一种规范方法是使用ThreadLocal,这个类能使线程中的某个值与保存值的对象关联起来.</p>\",\"frontmatter\":{\"title\":\"Java Thread Local\",\"date\":\"November 20, 2017\",\"tags\":[\"java\"]}}},\"pathContext\":{\"path\":\"/java-thread-local\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---java-thread-local-7f481334cbd179ec5b2b.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Note Site\",\"author\":\"stone\"}},\"markdownRemark\":{\"id\":\"/home/peng/develop/workspace/stone-site/src/pages/2017-11-20-java-thread-local/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h1>Java Thread Local</h1>\\n<h2>线程封闭</h2>\\n<p>当访问共享的可变数据时,通常需要使用同步.一种避免使用同步的方式就是不共享数据,如果仅在单线程内访问数据,\\n就不需要同步,这种数据被称为<strong>线程封闭</strong>(Thread Confinement)</p>\\n<h2>ThreadLocal类</h2>\\n<p>维持线程封闭性的一种规范方法是使用ThreadLocal,这个类能使线程中的某个值与保存值的对象关联起来.</p>\",\"frontmatter\":{\"title\":\"Java Thread Local\",\"date\":\"November 20, 2017\",\"tags\":[\"java\"]}}},\"pathContext\":{\"path\":\"/java-thread-local\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/java-thread-local.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/java-thread-local.json\n// module chunks = 10420783750355646000"],"sourceRoot":""}