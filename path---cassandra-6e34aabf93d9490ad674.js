webpackJsonp([0x75b9f6ddc7733400],{"./node_modules/json-loader/index.js!./.cache/json/cassandra.json":function(n,l){n.exports={data:{site:{siteMetadata:{title:"Note Site",author:"stone"}},markdownRemark:{id:"/home/peng/develop/workspace/stone-site/src/pages/2017-11-29-cassandra/index.md absPath of file >>> MarkdownRemark",html:"<h2>ACID</h2>\n<ul>\n<li>\n<p>原子性(Atomic)</p>\n<ul>\n<li>执行一个语句时,事务中的每个更新都必须成功才能称为成功</li>\n</ul>\n</li>\n<li>\n<p>一致性(Consistent)</p>\n<ul>\n<li>数据必须从一个正确的状态转移到另一个正确的状态</li>\n</ul>\n</li>\n<li>\n<p>隔离性(Isolated)</p>\n<ul>\n<li>并发执行的事务不应该彼此依赖</li>\n</ul>\n</li>\n<li>\n<p>持久性(Durable)</p>\n<ul>\n<li>一旦一个事务成功完成,变更就不再丢失</li>\n</ul>\n</li>\n</ul>\n<h2>CAP理论</h2>\n<ul>\n<li>\n<p>一致性(Consistent)</p>\n<ul>\n<li>对于所有的数据库客户端使用同样的查询都可以得到同样的结果,\n即使是有并发更新的时候也是如此</li>\n</ul>\n</li>\n<li>\n<p>可用性(Availability)</p>\n<ul>\n<li>所有的数据库客户端总是可以读写数据</li>\n</ul>\n</li>\n<li>\n<p>分区耐受性(Partition Tolerance)</p>\n<ul>\n<li>数据库可以分散到多台机器上,即使发生网络故障,被分成多个分区,\n依然可以提供服务\nCAP理论:对于任意给定的系统,只能强化这三个特性中的两个.</li>\n</ul>\n</li>\n<li>\n<p>CA</p>\n<ul>\n<li>主要支持一致性和可用性,很可能使用了两阶段提交的分布式事务,如果网络\n发生分裂,那么系统可能停止响应</li>\n<li>关系型数据库,MySQL,Postgres</li>\n</ul>\n</li>\n<li>\n<p>CP</p>\n<ul>\n<li>主要支持一致性和分区耐受性,通过设置数据分片来提升可扩展性,数据将保持\n一致性,但是如果有节点发生故障,仍有部分数据不可用</li>\n<li>MongoDB,HBase,Redis</li>\n</ul>\n</li>\n<li>\n<p>AP</p>\n<ul>\n<li>主要支持可用性和分区耐受性,系统可能返回不太精确的数据,但是系统将始终\n可用,即使网络发生分区的时候也是如此</li>\n<li>亚马逊Dynamo的衍生品,Cassandra</li>\n</ul>\n</li>\n</ul>",frontmatter:{title:"Cassandra",date:"November 29, 2017",tags:["java","jvm"]}}},pathContext:{path:"/cassandra"}}}});
//# sourceMappingURL=path---cassandra-6e34aabf93d9490ad674.js.map