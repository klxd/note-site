webpackJsonp([0x7432c3f32f16d400],{"./node_modules/json-loader/index.js!./.cache/json/back-to-top-button.json":function(n,s){n.exports={data:{site:{siteMetadata:{title:"Note Site",author:"stone"}},markdownRemark:{id:"/home/peng/develop/workspace/stone-site/src/pages/2017-11-21-back-to-top-button/index.md absPath of file >>> MarkdownRemark",html:'<p>置顶按钮是大部分网站都会有的一个功能，尤其是阅读型网站（如知乎，微博）。\n当网页长度过长，用户在浏览到网页底部的时候想返回顶端，此时置顶按钮可以帮助用户快速\n到达顶端，而不是通过多次滚动滑轮或者是手动调整滚动条。  </p>\n<p>Github上有许多关于置顶按钮的前端类库，但是为了这么小的一个功能，特意去引入一个类库\n感觉有点没必要，于是准备自己实现一个。</p>\n<h2>按钮的样式</h2>\n<p>本网站的前端样式很多是参考了知乎的主页，知乎的置顶按钮长得也比较讨喜，\n于是参考其CSS在界面上先实现出来，基本的特点就是固定位置，位于页面底部。</p>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code><span class="token selector">.corner-container</span> <span class="token punctuation">{</span>\n <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>\n <span class="token property">bottom</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>\n <span class="token property">right</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h2>获取滚动条的位置</h2>\n<p>由于Webkit对于滚动条的位置没有按照标准处理,所以需要自己实现一个函数获得正确的<code>scrollingElement</code>\n在参考了以下<a href="https://imququ.com/post/document-scrollingelement-in-chrome.html">文章</a>之后,\n使用以下语句获得<code>scrollTarget</code>,以下代码在chrome,edge和IE11下均能正常工作. </p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">var</span> scrollTarget <span class="token operator">=</span> document<span class="token punctuation">.</span>scrollingElement <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement\n</code></pre>\n      </div>\n<p>获得了正确的<code>scrollTarget</code>之后,通过<code>scrollTarget.scrollTop</code>可以获取滚动条的偏移位置,\n而对其的直接赋值则可以修改滚动条的位置</p>\n<h2>什么时候显示置顶按钮</h2>\n<p>置顶按钮不是时刻都要显示的，若当前显示的页面已经是网页的顶端，那么点击置顶按钮是没有意义的，\n所以需要将其隐藏. 对于<strong>网页顶端</strong>,我倾向于这样定义: 若用户通过转动一圈鼠标滚轮可以到达\n网页顶部,那么这个位置可被认定为网页顶端.<br>\n在代码中,可以通过一个<code>offset</code>常量来定义:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>  <span class="token keyword">this</span><span class="token punctuation">.</span>offsetTop <span class="token operator">=</span> <span class="token number">150</span><span class="token punctuation">;</span>\n  onScroll <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>show<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>offsetTop<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>实现效果:</p>\n<ul>\n<li>滚动条移动时刷新置顶按钮的状态</li>\n<li>若当前页面不在网页顶端,才显示置顶按钮</li>\n</ul>\n<h2>滚动条运动: 步长固定</h2>\n<p>在拿到<code>scrollingElement</code>之后,通过<code>scrollTarget.scrollTop = 0</code>可以直接让页面跳到顶端,\n但是这样的变化感觉有点突兀.参照知乎的设计,页面是平稳地滚动到顶端,有类似于动画的效果.\n此效果可以用<code>setTimeout</code>实现,代码如下:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>  onClick <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scrollUp</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  scrollUp <span class="token operator">=</span> <span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> nextScrollTop <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">-</span> size<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>scrollTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> nextScrollTop <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> nextScrollTop <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollUp<span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>实现效果</p>\n<ul>\n<li>自定义运动步长: 每次向上滚动一定距离</li>\n<li>刷新频率固定: 一秒钟向上滚动60次</li>\n</ul>\n<h2>滚动条运动: 总时间固定</h2>\n<p>上面实现的滚动条定长运动基本完成了置顶按钮的功能,但是有一个小缺陷,当需要滚动的距离很长时,\n置顶操作需要花费较长的时间. 如果简单地增大步长,则在滚动距离较小的时候失去了动画效果.\n经过一番实验,发现其实需要实现的是一个<em>总时间固定</em>的动画效果,代码如下:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>  onClick <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scrollUpBaseTime</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  scrollUpBaseTime <span class="token operator">=</span> <span class="token punctuation">(</span>ms<span class="token punctuation">,</span> refreshRate<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> stepSize <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">/</span> refreshRate<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scrollUp</span><span class="token punctuation">(</span>stepSize<span class="token punctuation">,</span> ms <span class="token operator">/</span> refreshRate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  scrollUp <span class="token operator">=</span> <span class="token punctuation">(</span>size<span class="token punctuation">,</span> ms<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> nextScrollTop <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">-</span> size<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>scrollTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> nextScrollTop <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> nextScrollTop <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollUp<span class="token punctuation">,</span> ms<span class="token punctuation">,</span> size<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>实现效果</p>\n<ul>\n<li>自定义刷新频率</li>\n<li>自定义总的运动时间</li>\n</ul>',frontmatter:{title:"置顶按钮的实现",date:"November 21, 2017",tags:["web","javascript"]}}},pathContext:{path:"/back-to-top-button"}}}});
//# sourceMappingURL=path---back-to-top-button-e8458cb29761c63d196a.js.map