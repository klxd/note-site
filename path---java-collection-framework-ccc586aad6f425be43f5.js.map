{"version":3,"sources":["webpack:///path---java-collection-framework-ccc586aad6f425be43f5.js","webpack:///./.cache/json/java-collection-framework.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/java-collection-framework.json","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","tableOfContents","frontmatter","date","tags","pathContext","path"],"mappings":"AAAAA,cAAc,qBAERC,mFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,YAAAC,OAAA,UAAsCC,gBAAmBC,GAAA,+GAAAC,KAAA,krvBAAowvBC,gBAAA,2SAAAC,aAAq5CN,MAAA,4BAAAO,KAAA,qBAAAC,MAAA,uCAA8GC,aAAgBC,KAAA","file":"path---java-collection-framework-ccc586aad6f425be43f5.js","sourcesContent":["webpackJsonp([2844489743973785600],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/java-collection-framework.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Note Site\",\"author\":\"stone\"}},\"markdownRemark\":{\"id\":\"/home/peng/develop/workspace/stone-site/src/pages/2017-11-01-jcf/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2 id=\\\"interface-queue\\\"><a href=\\\"#interface-queue\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>interface Queue</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Queue</span><span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Collection</span><span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 向队尾插入元素,失败则抛出异常 */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>E e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 向队尾插入元素,失败返回false */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">offer</span><span class=\\\"token punctuation\\\">(</span>E e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 获取并删除队首元素,失败则抛出异常 */</span>\\n    E <span class=\\\"token function\\\">remove</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 获取并删除队首元素,失败则返回null */</span>\\n    E <span class=\\\"token function\\\">poll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 获取但不删除队首元素,失败则抛出异常 */</span>\\n    E <span class=\\\"token function\\\">element</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 获取但不删除队首元素,失败则返回null */</span>\\n    E <span class=\\\"token function\\\">peek</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"interface\\\"><a href=\\\"#interface\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>interface</h2>\\n<h2 id=\\\"工具类-arrays\\\"><a href=\\\"#%E5%B7%A5%E5%85%B7%E7%B1%BB-arrays\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>工具类 Arrays</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Arrays</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Suppresses default constructor, ensuring non-instantiability.</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token function\\\">Arrays</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * @serial include\\n     */</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>静态工具类,无法实例化</li>\\n<li>内嵌一个 ArrayList 类,</li>\\n</ul>\\n<h3 id=\\\"arraysaslistta\\\"><a href=\\\"#arraysaslistta\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Arrays.asList(T…a)</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token annotation punctuation\\\">@SafeVarargs</span>\\n    <span class=\\\"token annotation punctuation\\\">@SuppressWarnings</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"varargs\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> List<span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">asList</span><span class=\\\"token punctuation\\\">(</span>T<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span> a<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ArrayList</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ArrayList</span><span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">AbstractList</span><span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">RandomAccess</span><span class=\\\"token punctuation\\\">,</span> java<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span>Serializable\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">final</span> <span class=\\\"token keyword\\\">long</span> serialVersionUID <span class=\\\"token operator\\\">=</span> <span class=\\\"token operator\\\">-</span>2764017481108945198L<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">final</span> E<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> a<span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// -- 直接使用传入的数组作为底层容器</span>\\n        <span class=\\\"token function\\\">ArrayList</span><span class=\\\"token punctuation\\\">(</span>E<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> array<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            a <span class=\\\"token operator\\\">=</span> Objects<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requireNonNull</span><span class=\\\"token punctuation\\\">(</span>array<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">size</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> a<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> Object<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token function\\\">toArray</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> a<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">clone</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token annotation punctuation\\\">@SuppressWarnings</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"unchecked\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> T<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token function\\\">toArray</span><span class=\\\"token punctuation\\\">(</span>T<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> a<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">int</span> size <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">size</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">&lt;</span> size<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token keyword\\\">return</span> Arrays<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">copyOf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>a<span class=\\\"token punctuation\\\">,</span> size<span class=\\\"token punctuation\\\">,</span>\\n                                     <span class=\\\"token punctuation\\\">(</span>Class<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">T</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> a<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getClass</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            System<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">arraycopy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>a<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> a<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> size<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> size<span class=\\\"token punctuation\\\">)</span>\\n                a<span class=\\\"token punctuation\\\">[</span>size<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> null<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> a<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> E <span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> index<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> a<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> E <span class=\\\"token function\\\">set</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> index<span class=\\\"token punctuation\\\">,</span> E element<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            E oldValue <span class=\\\"token operator\\\">=</span> a<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            a<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> oldValue<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>Object o<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            E<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>a<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>o <span class=\\\"token operator\\\">==</span> null<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> a<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span>\\n                    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">==</span> null<span class=\\\"token punctuation\\\">)</span>\\n                        <span class=\\\"token keyword\\\">return</span> i<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> a<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span>\\n                    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>o<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">equals</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                        <span class=\\\"token keyword\\\">return</span> i<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">contains</span><span class=\\\"token punctuation\\\">(</span>Object o<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>o<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">!=</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> Spliterator<span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">spliterator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> Spliterators<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">spliterator</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> Spliterator<span class=\\\"token punctuation\\\">.</span>ORDERED<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span>Consumer<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token keyword\\\">super</span> E<span class=\\\"token operator\\\">></span> action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            Objects<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requireNonNull</span><span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span>E e <span class=\\\"token operator\\\">:</span> a<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                action<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">accept</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">replaceAll</span><span class=\\\"token punctuation\\\">(</span>UnaryOperator<span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> operator<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            Objects<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requireNonNull</span><span class=\\\"token punctuation\\\">(</span>operator<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            E<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>a<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> a<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                a<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> operator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">apply</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">sort</span><span class=\\\"token punctuation\\\">(</span>Comparator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token keyword\\\">super</span> E<span class=\\\"token operator\\\">></span> c<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            Arrays<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sort</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> c<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>返回 Arrays 的内部类 ArrayList 的实例</li>\\n<li>Arrays.ArrayList 直接将传入的数组作为底层容器</li>\\n<li>Arrays.ArrayList 没有实现<code>add</code>和<code>remove</code>等函数,若调用会直接抛出异常</li>\\n</ul>\\n<h2 id=\\\"q\\\"><a href=\\\"#q\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Q</h2>\\n<ul>\\n<li>怎么打印数组？ 怎样打印数组中的重复元素</li>\\n<li>Array 和 ArrayList 有什么区别？</li>\\n<li>什么时候应该使用 Array 而不是 ArrayList</li>\\n<li>数组和链表数据结构描述，各自的时间复杂度</li>\\n<li>数组有没有 length()这个方法? String 有没有 length()这个方法</li>\\n<li>队列和栈是什么，列出它们的区别</li>\\n<li>BlockingQueue 是什么</li>\\n<li>简述 ConcurrentLinkedQueue 和 LinkedBlockingQueue 的用处和不同之处</li>\\n</ul>\",\"tableOfContents\":\"<ul>\\n<li><a href=\\\"#interface-queue\\\">interface Queue</a></li>\\n<li><a href=\\\"#interface\\\">interface</a></li>\\n<li>\\n<p><a href=\\\"#%E5%B7%A5%E5%85%B7%E7%B1%BB-arrays\\\">工具类 Arrays</a></p>\\n<ul>\\n<li><a href=\\\"#arraysaslistta\\\">Arrays.asList(T…a)</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"#q\\\">Q</a></li>\\n</ul>\",\"frontmatter\":{\"title\":\"Java Collection Framework\",\"date\":\"September 12, 2017\",\"tags\":[\"java\",\"java collection framework\"]}}},\"pathContext\":{\"path\":\"/java-collection-framework\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---java-collection-framework-ccc586aad6f425be43f5.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Note Site\",\"author\":\"stone\"}},\"markdownRemark\":{\"id\":\"/home/peng/develop/workspace/stone-site/src/pages/2017-11-01-jcf/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2 id=\\\"interface-queue\\\"><a href=\\\"#interface-queue\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>interface Queue</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Queue</span><span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Collection</span><span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 向队尾插入元素,失败则抛出异常 */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>E e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 向队尾插入元素,失败返回false */</span>\\n    <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">offer</span><span class=\\\"token punctuation\\\">(</span>E e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 获取并删除队首元素,失败则抛出异常 */</span>\\n    E <span class=\\\"token function\\\">remove</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 获取并删除队首元素,失败则返回null */</span>\\n    E <span class=\\\"token function\\\">poll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 获取但不删除队首元素,失败则抛出异常 */</span>\\n    E <span class=\\\"token function\\\">element</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/** 获取但不删除队首元素,失败则返回null */</span>\\n    E <span class=\\\"token function\\\">peek</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"interface\\\"><a href=\\\"#interface\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>interface</h2>\\n<h2 id=\\\"工具类-arrays\\\"><a href=\\\"#%E5%B7%A5%E5%85%B7%E7%B1%BB-arrays\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>工具类 Arrays</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Arrays</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Suppresses default constructor, ensuring non-instantiability.</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token function\\\">Arrays</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n     * @serial include\\n     */</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>静态工具类,无法实例化</li>\\n<li>内嵌一个 ArrayList 类,</li>\\n</ul>\\n<h3 id=\\\"arraysaslistta\\\"><a href=\\\"#arraysaslistta\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Arrays.asList(T…a)</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token annotation punctuation\\\">@SafeVarargs</span>\\n    <span class=\\\"token annotation punctuation\\\">@SuppressWarnings</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"varargs\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> List<span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">asList</span><span class=\\\"token punctuation\\\">(</span>T<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span> a<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ArrayList</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ArrayList</span><span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">AbstractList</span><span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">RandomAccess</span><span class=\\\"token punctuation\\\">,</span> java<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span>Serializable\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">final</span> <span class=\\\"token keyword\\\">long</span> serialVersionUID <span class=\\\"token operator\\\">=</span> <span class=\\\"token operator\\\">-</span>2764017481108945198L<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">final</span> E<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> a<span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// -- 直接使用传入的数组作为底层容器</span>\\n        <span class=\\\"token function\\\">ArrayList</span><span class=\\\"token punctuation\\\">(</span>E<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> array<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            a <span class=\\\"token operator\\\">=</span> Objects<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requireNonNull</span><span class=\\\"token punctuation\\\">(</span>array<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">size</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> a<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> Object<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token function\\\">toArray</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> a<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">clone</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token annotation punctuation\\\">@SuppressWarnings</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"unchecked\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> T<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token function\\\">toArray</span><span class=\\\"token punctuation\\\">(</span>T<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> a<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">int</span> size <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">size</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">&lt;</span> size<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token keyword\\\">return</span> Arrays<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">copyOf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>a<span class=\\\"token punctuation\\\">,</span> size<span class=\\\"token punctuation\\\">,</span>\\n                                     <span class=\\\"token punctuation\\\">(</span>Class<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">T</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> a<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getClass</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            System<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">arraycopy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>a<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> a<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> size<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> size<span class=\\\"token punctuation\\\">)</span>\\n                a<span class=\\\"token punctuation\\\">[</span>size<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> null<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> a<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> E <span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> index<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> a<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> E <span class=\\\"token function\\\">set</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> index<span class=\\\"token punctuation\\\">,</span> E element<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            E oldValue <span class=\\\"token operator\\\">=</span> a<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            a<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> oldValue<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>Object o<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            E<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>a<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>o <span class=\\\"token operator\\\">==</span> null<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> a<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span>\\n                    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">==</span> null<span class=\\\"token punctuation\\\">)</span>\\n                        <span class=\\\"token keyword\\\">return</span> i<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> a<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span>\\n                    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>o<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">equals</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                        <span class=\\\"token keyword\\\">return</span> i<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">contains</span><span class=\\\"token punctuation\\\">(</span>Object o<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>o<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">!=</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> Spliterator<span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">spliterator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> Spliterators<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">spliterator</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> Spliterator<span class=\\\"token punctuation\\\">.</span>ORDERED<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span>Consumer<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token keyword\\\">super</span> E<span class=\\\"token operator\\\">></span> action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            Objects<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requireNonNull</span><span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span>E e <span class=\\\"token operator\\\">:</span> a<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                action<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">accept</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">replaceAll</span><span class=\\\"token punctuation\\\">(</span>UnaryOperator<span class=\\\"token operator\\\">&lt;</span>E<span class=\\\"token operator\\\">></span> operator<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            Objects<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requireNonNull</span><span class=\\\"token punctuation\\\">(</span>operator<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            E<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>a<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> a<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                a<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> operator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">apply</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">sort</span><span class=\\\"token punctuation\\\">(</span>Comparator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token keyword\\\">super</span> E<span class=\\\"token operator\\\">></span> c<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            Arrays<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sort</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> c<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>返回 Arrays 的内部类 ArrayList 的实例</li>\\n<li>Arrays.ArrayList 直接将传入的数组作为底层容器</li>\\n<li>Arrays.ArrayList 没有实现<code>add</code>和<code>remove</code>等函数,若调用会直接抛出异常</li>\\n</ul>\\n<h2 id=\\\"q\\\"><a href=\\\"#q\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Q</h2>\\n<ul>\\n<li>怎么打印数组？ 怎样打印数组中的重复元素</li>\\n<li>Array 和 ArrayList 有什么区别？</li>\\n<li>什么时候应该使用 Array 而不是 ArrayList</li>\\n<li>数组和链表数据结构描述，各自的时间复杂度</li>\\n<li>数组有没有 length()这个方法? String 有没有 length()这个方法</li>\\n<li>队列和栈是什么，列出它们的区别</li>\\n<li>BlockingQueue 是什么</li>\\n<li>简述 ConcurrentLinkedQueue 和 LinkedBlockingQueue 的用处和不同之处</li>\\n</ul>\",\"tableOfContents\":\"<ul>\\n<li><a href=\\\"#interface-queue\\\">interface Queue</a></li>\\n<li><a href=\\\"#interface\\\">interface</a></li>\\n<li>\\n<p><a href=\\\"#%E5%B7%A5%E5%85%B7%E7%B1%BB-arrays\\\">工具类 Arrays</a></p>\\n<ul>\\n<li><a href=\\\"#arraysaslistta\\\">Arrays.asList(T…a)</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"#q\\\">Q</a></li>\\n</ul>\",\"frontmatter\":{\"title\":\"Java Collection Framework\",\"date\":\"September 12, 2017\",\"tags\":[\"java\",\"java collection framework\"]}}},\"pathContext\":{\"path\":\"/java-collection-framework\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/java-collection-framework.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/java-collection-framework.json\n// module chunks = 2844489743973785600"],"sourceRoot":""}