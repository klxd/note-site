{"version":3,"sources":["webpack:///path---blog-with-gatsby-6f8475f30079f7e34723.js","webpack:///./.cache/json/blog-with-gatsby.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/blog-with-gatsby.json","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","tableOfContents","frontmatter","date","tags","pathContext","path"],"mappings":"AAAAA,cAAc,qBAERC,0EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,YAAAC,OAAA,UAAsCC,gBAAmBC,GAAA,4HAAAC,KAAA,6soBAA6vpBC,gBAAA,y9BAAAC,aAA0yCN,MAAA,mBAAAO,KAAA,qBAAAC,MAAA,UAAwEC,aAAgBC,KAAA","file":"path---blog-with-gatsby-6f8475f30079f7e34723.js","sourcesContent":["webpackJsonp([10660064599783924000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/blog-with-gatsby.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Note Site\",\"author\":\"stone\"}},\"markdownRemark\":{\"id\":\"/home/peng/develop/workspace/stone-site/src/pages/2017-09-03-blog-with-gatsby/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3 id=\\\"为什么使用-gatsby\\\"><a href=\\\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-gatsby\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>为什么使用 Gatsby</h3>\\n<p>刚开始想要在<strong><a href=\\\"https://pages.github.com/\\\">GitHub Pages</a></strong>上搭建一个博客网站的时候,\\n我的需要的只是一个可以帮我将普通文本文件转化为 HTML 的框架,比如已经和 GitHub Pages 深度集成的\\n<strong><a href=\\\"https://jekyllrb.com/\\\">Jekyll</a></strong>,但是带着探索新技术的心,我还是选择了更加新潮的\\n<a href=\\\"https://www.gatsbyjs.org/\\\">Gatsby</a>.</p>\\n<blockquote>\\n<p>Gatsby is a blazing-fast static site generator for React.</p>\\n</blockquote>\\n<p>从 GitHub 上简洁的介绍可以看到,这是一个用于快速构建静态网站的框架,并且是使用使用的是<a href=\\\"https://reactjs.org/\\\">React.js</a>.\\n由于工作中使用过 React,当我看到连 React 的官网都是用 Gatsby 搭建的时候,我决心尝试一下这个框架.</p>\\n<h3 id=\\\"安装-gatsby\\\"><a href=\\\"#%E5%AE%89%E8%A3%85-gatsby\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装 Gatsby</h3>\\n<p>跟着官方文档<a href=\\\"https://www.gatsbyjs.org/docs/\\\">https://www.gatsbyjs.org/docs/</a>,可以很容易地搭建出 Gatsby 的开发环境,\\n如果之前使用过 Node.js,应该可以很容易的上手.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> --global gatsby-cli\\ngatsby new gatsby-site\\n<span class=\\\"token function\\\">cd</span> gatsby-site\\ngatsby develop\\n</code></pre>\\n      </div>\\n<p>Gatsby 提供了几个默认的 starter 用于从模板中快速搭建一个网站,虽然 starter 都比较简单,但是对理解\\nGatsby 的使用方法有很大帮助.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code>gatsby new <span class=\\\"token punctuation\\\">[</span>SITE_DIRECTORY<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">[</span>URL_OF_STARTER_GITHUB_REPO<span class=\\\"token punctuation\\\">]</span>\\ngatsby new blog https://github.com/gatsbyjs/gatsby-starter-blog\\n</code></pre>\\n      </div>\\n<hr>\\n<h3 id=\\\"gatsby-的项目结构\\\"><a href=\\\"#gatsby-%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gatsby 的项目结构</h3>\\n<p>Gatsby 的基本目录结构如下:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>├── gatsby-config.js\\n├── package.json\\n└── src\\n    ├── html.jsx\\n    ├── pages\\n    │   ├── index.jsx\\n    │   └── posts\\n    │       ├── 01-01-2017\\n    │       │   └── index.md\\n    │       ├── 01-02-2017\\n    │       │   └── index.md\\n    │       └── 01-03-2017\\n    │           └── index.md\\n    ├── templates\\n    │   └── post.jsx\\n    │\\n    └── layouts\\n        └── index.jsx</code></pre>\\n      </div>\\n<p><strong>pages 目录</strong><br>\\n在这个目录下的 React Component 会自动转化为静态页面,URL 路径由文件名决定,如<code>src/pages/index.js</code>\\n会转化为<code>domain/</code>,而<code>src/pages/about.js</code>会转化为<code>domain/about/</code>.</p>\\n<p><strong>templates 目录</strong><br>\\npages 目录可以直接构造新页面,而当有许多类似的页面时,直接在 pages 页面创建会需要做许多重复的工作,\\n这时可以在 templates 目录下创建一个模板用于包装,然后使用 GraphQL 将所需要的数据放入这个模板,从而自动生成多个类似的页面.</p>\\n<p><strong>Layouts 目录</strong><br>\\n这个目录下包含了一个 React Component(非必须的),它是网站中所有页面的公共容器,可以在这里定义网站的导航条和脚注.</p>\\n<p><strong>html.js 文件</strong><br>\\n这个文件定义了整个网站最基本的 HTML 结构,可以在这个文件里面自定义<code>&#x3C;head></code>中的内容.</p>\\n<hr>\\n<h3 id=\\\"gatsby-插件\\\"><a href=\\\"#gatsby-%E6%8F%92%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gatsby 插件</h3>\\n<p>Gatsby 支持了许许多多的<a href=\\\"https://www.gatsbyjs.org/docs/plugins/\\\">插件</a>,我想这才是许多人选择 Gatsby 的原因.在网站中加入新的插件支持需要以下两个步骤(以<code>gatsby-transformer-json</code>为例):</p>\\n<ol>\\n<li>从 npm 安装 <code>npm install --save gatsby-transformer-json</code></li>\\n<li>在 gatsby-config.js 中配置</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`gatsby-transformer-json`</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h3 id=\\\"在-gatsby-中使用-markdown\\\"><a href=\\\"#%E5%9C%A8-gatsby-%E4%B8%AD%E4%BD%BF%E7%94%A8-markdown\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>在 Gatsby 中使用 Markdown</h3>\\n<p>说到构建博客网站,一个重要的点就是要将<strong>网站页面逻辑</strong>和<strong>博客文本内容</strong>分离,这样在写博客时不用关心页面的具体渲染逻辑,我想没有人想在写文章的时候还要想着怎么去调整页面的 CSS 吧.\\nMarkdown 是一种轻量级的文本标记语言,它的特点是可以通过简单的标记语法让文本内容具有一定的格式.\\n在 Gatsby 中使用 Markdown 生成页面需要一下几个步骤:</p>\\n<h4 id=\\\"1从文件系统从读取-markdown-文件\\\"><a href=\\\"#1%E4%BB%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BB%8E%E8%AF%BB%E5%8F%96-markdown-%E6%96%87%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>1.从文件系统从读取 Markdown 文件</h4>\\n<p>这是通过<code>gatsby-source-filesystem</code>插件完成的</p>\\n<ol>\\n<li>安装<code>npm i --save gatsby-source-filesystem</code></li>\\n<li>配置<code>gatsby-config.js</code></li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`gatsby-source-filesystem`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>__dirname<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/path/to/markdown/files`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"markdown-pages\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4 id=\\\"2-转换-markdown-文件\\\"><a href=\\\"#2-%E8%BD%AC%E6%8D%A2-markdown-%E6%96%87%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>2. 转换 Markdown 文件</h4>\\n<p>这是通过<code>gatsby-transformer-remark</code>插件完成的,这个插件会读取 Markdown 文件,\\n将其中元数据部分(metadata)转化为<code>frontmatter</code>,将内容部分转化为 HTML.</p>\\n<ol>\\n<li>安装<code>npm i --save gatsby-transformer-remark</code></li>\\n<li>配置<code>gatsby-config.js</code></li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`gatsby-transformer-remark`</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4 id=\\\"3-为-markdown-数据创建模板组件\\\"><a href=\\\"#3-%E4%B8%BA-markdown-%E6%95%B0%E6%8D%AE%E5%88%9B%E5%BB%BA%E6%A8%A1%E6%9D%BF%E7%BB%84%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>3. 为 Markdown 数据创建模板组件</h4>\\n<p>在<code>src/templates/</code>目录下为转换后的 Markdown 数据创建模板文件,定义生成的 html 页面的具体内容和样式.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Template</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// this prop will be injected by the GraphQL query below.</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>markdownRemark<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// data.markdownRemark holds our post data</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>frontMatter<span class=\\\"token punctuation\\\">,</span> html<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> markdownRemark<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div className<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"blog-post-container\\\"</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>div className<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"blog-post\\\"</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>frontmatter<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h2<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>frontmatter<span class=\\\"token punctuation\\\">.</span>date<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div\\n          className<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"blog-post-content\\\"</span>\\n          dangerouslySetInnerHTML<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>__html<span class=\\\"token punctuation\\\">:</span> html<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> pageQuery <span class=\\\"token operator\\\">=</span> graphql<span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n  query BlogPostByPath($path: String!) {\\n    markdownRemark(frontmatter: {path: {eq: $path}}) {\\n      html\\n      frontmatter {\\n        date(formatString: \\\"MMMM DD, YYYY\\\")\\n        path\\n        title\\n      }\\n    }\\n  }\\n`</span></span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>需要注意的点:</p>\\n<ol>\\n<li>pageQuery 用于获取 Markdown 数据,Gatsby 会自动地运行这个语句并返回其查询结果</li>\\n<li>查询结果会被注入到 Template 组件中,可以在 React 组件的 render 函数中使用</li>\\n</ol>\\n<h4 id=\\\"4-利用-gatsby-提供的-node-api-创建页面\\\"><a href=\\\"#4-%E5%88%A9%E7%94%A8-gatsby-%E6%8F%90%E4%BE%9B%E7%9A%84-node-api-%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>4. 利用 Gatsby 提供的 Node API 创建页面</h4>\\n<p>Gatsby 提供了强大的<a href=\\\"https://www.gatsbyjs.org/docs/node-apis/\\\">Node.js API</a>,\\n它们可以在<code>gatsby-node.js</code>文件中使用.下面将会示范如何使用<code>createPages</code>API 来创建页面.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nexports<span class=\\\"token punctuation\\\">.</span>createPages <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>boundActionCreators<span class=\\\"token punctuation\\\">,</span> graphql<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>createPage<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> blogPostTemplate <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`src/templates/blogTemplate.js`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n    {\\n      allMarkdownRemark(\\n        sort: {order: DESC, fields: [frontmatter___date]}\\n        limit: 1000\\n      ) {\\n        edges {\\n          node {\\n            excerpt(pruneLength: 250)\\n            html\\n            id\\n            frontmatter {\\n              date\\n              path\\n              title\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>result <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    result<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allMarkdownRemark<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>node<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        path<span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">.</span>frontmatter<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">,</span>\\n        component<span class=\\\"token punctuation\\\">:</span> blogPostTemplate<span class=\\\"token punctuation\\\">,</span>\\n        context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// additional data can be passed via context</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>Gatsby 会自动调用<code>gatsby-config.js</code>文件 export 的每个函数</li>\\n<li>Gatsby 在调用函数时会自动注入参数,如<code>boundActionCreators</code>和<code>graphql</code></li>\\n<li>createPages 函数中,先通过 graphql 获取元数据,然后在回调函数中使用<code>createPage</code>创建页面</li>\\n</ul>\",\"tableOfContents\":\"<ul>\\n<li><a href=\\\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-gatsby\\\">为什么使用 Gatsby</a></li>\\n<li><a href=\\\"#%E5%AE%89%E8%A3%85-gatsby\\\">安装 Gatsby</a></li>\\n<li><a href=\\\"#gatsby-%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84\\\">Gatsby 的项目结构</a></li>\\n<li><a href=\\\"#gatsby-%E6%8F%92%E4%BB%B6\\\">Gatsby 插件</a></li>\\n<li>\\n<p><a href=\\\"#%E5%9C%A8-gatsby-%E4%B8%AD%E4%BD%BF%E7%94%A8-markdown\\\">在 Gatsby 中使用 Markdown</a></p>\\n<ul>\\n<li><a href=\\\"#1%E4%BB%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BB%8E%E8%AF%BB%E5%8F%96-markdown-%E6%96%87%E4%BB%B6\\\">1.从文件系统从读取 Markdown 文件</a></li>\\n<li><a href=\\\"#2-%E8%BD%AC%E6%8D%A2-markdown-%E6%96%87%E4%BB%B6\\\">2. 转换 Markdown 文件</a></li>\\n<li><a href=\\\"#3-%E4%B8%BA-markdown-%E6%95%B0%E6%8D%AE%E5%88%9B%E5%BB%BA%E6%A8%A1%E6%9D%BF%E7%BB%84%E4%BB%B6\\\">3. 为 Markdown 数据创建模板组件</a></li>\\n<li><a href=\\\"#4-%E5%88%A9%E7%94%A8-gatsby-%E6%8F%90%E4%BE%9B%E7%9A%84-node-api-%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2\\\">4. 利用 Gatsby 提供的 Node API 创建页面</a></li>\\n</ul>\\n</li>\\n</ul>\",\"frontmatter\":{\"title\":\"使用Gatsby构建静态博客网站\",\"date\":\"September 03, 2017\",\"tags\":[\"web\"]}}},\"pathContext\":{\"path\":\"/blog-with-gatsby\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-with-gatsby-6f8475f30079f7e34723.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Note Site\",\"author\":\"stone\"}},\"markdownRemark\":{\"id\":\"/home/peng/develop/workspace/stone-site/src/pages/2017-09-03-blog-with-gatsby/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3 id=\\\"为什么使用-gatsby\\\"><a href=\\\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-gatsby\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>为什么使用 Gatsby</h3>\\n<p>刚开始想要在<strong><a href=\\\"https://pages.github.com/\\\">GitHub Pages</a></strong>上搭建一个博客网站的时候,\\n我的需要的只是一个可以帮我将普通文本文件转化为 HTML 的框架,比如已经和 GitHub Pages 深度集成的\\n<strong><a href=\\\"https://jekyllrb.com/\\\">Jekyll</a></strong>,但是带着探索新技术的心,我还是选择了更加新潮的\\n<a href=\\\"https://www.gatsbyjs.org/\\\">Gatsby</a>.</p>\\n<blockquote>\\n<p>Gatsby is a blazing-fast static site generator for React.</p>\\n</blockquote>\\n<p>从 GitHub 上简洁的介绍可以看到,这是一个用于快速构建静态网站的框架,并且是使用使用的是<a href=\\\"https://reactjs.org/\\\">React.js</a>.\\n由于工作中使用过 React,当我看到连 React 的官网都是用 Gatsby 搭建的时候,我决心尝试一下这个框架.</p>\\n<h3 id=\\\"安装-gatsby\\\"><a href=\\\"#%E5%AE%89%E8%A3%85-gatsby\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装 Gatsby</h3>\\n<p>跟着官方文档<a href=\\\"https://www.gatsbyjs.org/docs/\\\">https://www.gatsbyjs.org/docs/</a>,可以很容易地搭建出 Gatsby 的开发环境,\\n如果之前使用过 Node.js,应该可以很容易的上手.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> --global gatsby-cli\\ngatsby new gatsby-site\\n<span class=\\\"token function\\\">cd</span> gatsby-site\\ngatsby develop\\n</code></pre>\\n      </div>\\n<p>Gatsby 提供了几个默认的 starter 用于从模板中快速搭建一个网站,虽然 starter 都比较简单,但是对理解\\nGatsby 的使用方法有很大帮助.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code>gatsby new <span class=\\\"token punctuation\\\">[</span>SITE_DIRECTORY<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">[</span>URL_OF_STARTER_GITHUB_REPO<span class=\\\"token punctuation\\\">]</span>\\ngatsby new blog https://github.com/gatsbyjs/gatsby-starter-blog\\n</code></pre>\\n      </div>\\n<hr>\\n<h3 id=\\\"gatsby-的项目结构\\\"><a href=\\\"#gatsby-%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gatsby 的项目结构</h3>\\n<p>Gatsby 的基本目录结构如下:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>├── gatsby-config.js\\n├── package.json\\n└── src\\n    ├── html.jsx\\n    ├── pages\\n    │   ├── index.jsx\\n    │   └── posts\\n    │       ├── 01-01-2017\\n    │       │   └── index.md\\n    │       ├── 01-02-2017\\n    │       │   └── index.md\\n    │       └── 01-03-2017\\n    │           └── index.md\\n    ├── templates\\n    │   └── post.jsx\\n    │\\n    └── layouts\\n        └── index.jsx</code></pre>\\n      </div>\\n<p><strong>pages 目录</strong><br>\\n在这个目录下的 React Component 会自动转化为静态页面,URL 路径由文件名决定,如<code>src/pages/index.js</code>\\n会转化为<code>domain/</code>,而<code>src/pages/about.js</code>会转化为<code>domain/about/</code>.</p>\\n<p><strong>templates 目录</strong><br>\\npages 目录可以直接构造新页面,而当有许多类似的页面时,直接在 pages 页面创建会需要做许多重复的工作,\\n这时可以在 templates 目录下创建一个模板用于包装,然后使用 GraphQL 将所需要的数据放入这个模板,从而自动生成多个类似的页面.</p>\\n<p><strong>Layouts 目录</strong><br>\\n这个目录下包含了一个 React Component(非必须的),它是网站中所有页面的公共容器,可以在这里定义网站的导航条和脚注.</p>\\n<p><strong>html.js 文件</strong><br>\\n这个文件定义了整个网站最基本的 HTML 结构,可以在这个文件里面自定义<code>&#x3C;head></code>中的内容.</p>\\n<hr>\\n<h3 id=\\\"gatsby-插件\\\"><a href=\\\"#gatsby-%E6%8F%92%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gatsby 插件</h3>\\n<p>Gatsby 支持了许许多多的<a href=\\\"https://www.gatsbyjs.org/docs/plugins/\\\">插件</a>,我想这才是许多人选择 Gatsby 的原因.在网站中加入新的插件支持需要以下两个步骤(以<code>gatsby-transformer-json</code>为例):</p>\\n<ol>\\n<li>从 npm 安装 <code>npm install --save gatsby-transformer-json</code></li>\\n<li>在 gatsby-config.js 中配置</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`gatsby-transformer-json`</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h3 id=\\\"在-gatsby-中使用-markdown\\\"><a href=\\\"#%E5%9C%A8-gatsby-%E4%B8%AD%E4%BD%BF%E7%94%A8-markdown\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>在 Gatsby 中使用 Markdown</h3>\\n<p>说到构建博客网站,一个重要的点就是要将<strong>网站页面逻辑</strong>和<strong>博客文本内容</strong>分离,这样在写博客时不用关心页面的具体渲染逻辑,我想没有人想在写文章的时候还要想着怎么去调整页面的 CSS 吧.\\nMarkdown 是一种轻量级的文本标记语言,它的特点是可以通过简单的标记语法让文本内容具有一定的格式.\\n在 Gatsby 中使用 Markdown 生成页面需要一下几个步骤:</p>\\n<h4 id=\\\"1从文件系统从读取-markdown-文件\\\"><a href=\\\"#1%E4%BB%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BB%8E%E8%AF%BB%E5%8F%96-markdown-%E6%96%87%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>1.从文件系统从读取 Markdown 文件</h4>\\n<p>这是通过<code>gatsby-source-filesystem</code>插件完成的</p>\\n<ol>\\n<li>安装<code>npm i --save gatsby-source-filesystem</code></li>\\n<li>配置<code>gatsby-config.js</code></li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`gatsby-source-filesystem`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>__dirname<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/path/to/markdown/files`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"markdown-pages\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4 id=\\\"2-转换-markdown-文件\\\"><a href=\\\"#2-%E8%BD%AC%E6%8D%A2-markdown-%E6%96%87%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>2. 转换 Markdown 文件</h4>\\n<p>这是通过<code>gatsby-transformer-remark</code>插件完成的,这个插件会读取 Markdown 文件,\\n将其中元数据部分(metadata)转化为<code>frontmatter</code>,将内容部分转化为 HTML.</p>\\n<ol>\\n<li>安装<code>npm i --save gatsby-transformer-remark</code></li>\\n<li>配置<code>gatsby-config.js</code></li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`gatsby-transformer-remark`</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4 id=\\\"3-为-markdown-数据创建模板组件\\\"><a href=\\\"#3-%E4%B8%BA-markdown-%E6%95%B0%E6%8D%AE%E5%88%9B%E5%BB%BA%E6%A8%A1%E6%9D%BF%E7%BB%84%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>3. 为 Markdown 数据创建模板组件</h4>\\n<p>在<code>src/templates/</code>目录下为转换后的 Markdown 数据创建模板文件,定义生成的 html 页面的具体内容和样式.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Template</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// this prop will be injected by the GraphQL query below.</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>markdownRemark<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// data.markdownRemark holds our post data</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>frontMatter<span class=\\\"token punctuation\\\">,</span> html<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> markdownRemark<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div className<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"blog-post-container\\\"</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>div className<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"blog-post\\\"</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>frontmatter<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h2<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>frontmatter<span class=\\\"token punctuation\\\">.</span>date<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div\\n          className<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"blog-post-content\\\"</span>\\n          dangerouslySetInnerHTML<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>__html<span class=\\\"token punctuation\\\">:</span> html<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> pageQuery <span class=\\\"token operator\\\">=</span> graphql<span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n  query BlogPostByPath($path: String!) {\\n    markdownRemark(frontmatter: {path: {eq: $path}}) {\\n      html\\n      frontmatter {\\n        date(formatString: \\\"MMMM DD, YYYY\\\")\\n        path\\n        title\\n      }\\n    }\\n  }\\n`</span></span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>需要注意的点:</p>\\n<ol>\\n<li>pageQuery 用于获取 Markdown 数据,Gatsby 会自动地运行这个语句并返回其查询结果</li>\\n<li>查询结果会被注入到 Template 组件中,可以在 React 组件的 render 函数中使用</li>\\n</ol>\\n<h4 id=\\\"4-利用-gatsby-提供的-node-api-创建页面\\\"><a href=\\\"#4-%E5%88%A9%E7%94%A8-gatsby-%E6%8F%90%E4%BE%9B%E7%9A%84-node-api-%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>4. 利用 Gatsby 提供的 Node API 创建页面</h4>\\n<p>Gatsby 提供了强大的<a href=\\\"https://www.gatsbyjs.org/docs/node-apis/\\\">Node.js API</a>,\\n它们可以在<code>gatsby-node.js</code>文件中使用.下面将会示范如何使用<code>createPages</code>API 来创建页面.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nexports<span class=\\\"token punctuation\\\">.</span>createPages <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>boundActionCreators<span class=\\\"token punctuation\\\">,</span> graphql<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>createPage<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> blogPostTemplate <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`src/templates/blogTemplate.js`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n    {\\n      allMarkdownRemark(\\n        sort: {order: DESC, fields: [frontmatter___date]}\\n        limit: 1000\\n      ) {\\n        edges {\\n          node {\\n            excerpt(pruneLength: 250)\\n            html\\n            id\\n            frontmatter {\\n              date\\n              path\\n              title\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>result <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    result<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allMarkdownRemark<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>node<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        path<span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">.</span>frontmatter<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">,</span>\\n        component<span class=\\\"token punctuation\\\">:</span> blogPostTemplate<span class=\\\"token punctuation\\\">,</span>\\n        context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// additional data can be passed via context</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>Gatsby 会自动调用<code>gatsby-config.js</code>文件 export 的每个函数</li>\\n<li>Gatsby 在调用函数时会自动注入参数,如<code>boundActionCreators</code>和<code>graphql</code></li>\\n<li>createPages 函数中,先通过 graphql 获取元数据,然后在回调函数中使用<code>createPage</code>创建页面</li>\\n</ul>\",\"tableOfContents\":\"<ul>\\n<li><a href=\\\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-gatsby\\\">为什么使用 Gatsby</a></li>\\n<li><a href=\\\"#%E5%AE%89%E8%A3%85-gatsby\\\">安装 Gatsby</a></li>\\n<li><a href=\\\"#gatsby-%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84\\\">Gatsby 的项目结构</a></li>\\n<li><a href=\\\"#gatsby-%E6%8F%92%E4%BB%B6\\\">Gatsby 插件</a></li>\\n<li>\\n<p><a href=\\\"#%E5%9C%A8-gatsby-%E4%B8%AD%E4%BD%BF%E7%94%A8-markdown\\\">在 Gatsby 中使用 Markdown</a></p>\\n<ul>\\n<li><a href=\\\"#1%E4%BB%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BB%8E%E8%AF%BB%E5%8F%96-markdown-%E6%96%87%E4%BB%B6\\\">1.从文件系统从读取 Markdown 文件</a></li>\\n<li><a href=\\\"#2-%E8%BD%AC%E6%8D%A2-markdown-%E6%96%87%E4%BB%B6\\\">2. 转换 Markdown 文件</a></li>\\n<li><a href=\\\"#3-%E4%B8%BA-markdown-%E6%95%B0%E6%8D%AE%E5%88%9B%E5%BB%BA%E6%A8%A1%E6%9D%BF%E7%BB%84%E4%BB%B6\\\">3. 为 Markdown 数据创建模板组件</a></li>\\n<li><a href=\\\"#4-%E5%88%A9%E7%94%A8-gatsby-%E6%8F%90%E4%BE%9B%E7%9A%84-node-api-%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2\\\">4. 利用 Gatsby 提供的 Node API 创建页面</a></li>\\n</ul>\\n</li>\\n</ul>\",\"frontmatter\":{\"title\":\"使用Gatsby构建静态博客网站\",\"date\":\"September 03, 2017\",\"tags\":[\"web\"]}}},\"pathContext\":{\"path\":\"/blog-with-gatsby\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-with-gatsby.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/blog-with-gatsby.json\n// module chunks = 10660064599783924000"],"sourceRoot":""}