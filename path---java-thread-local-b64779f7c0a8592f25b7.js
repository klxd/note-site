webpackJsonp([0x909e0f9bf91c7800],{"./node_modules/json-loader/index.js!./.cache/json/java-thread-local.json":function(a,e){a.exports={data:{site:{siteMetadata:{title:"Note Site",author:"stone"}},markdownRemark:{id:"/home/peng/HUE/WorkSpace/selfDevelop/note-site/src/pages/2017-11-20-java-thread-local/index.md absPath of file >>> MarkdownRemark",html:"<h1>Java Thread Local</h1>\n<h2>线程封闭</h2>\n<p>当访问共享的可变数据时,通常需要使用同步.一种避免使用同步的方式就是不共享数据,如果仅在单线程内访问数据,\n就不需要同步,这种数据被称为<strong>线程封闭</strong>(Thread Confinement)</p>\n<h2>ThreadLocal类</h2>\n<p>维持线程封闭性的一种规范方法是使用ThreadLocal,这个类能使线程中的某个值与保存值的对象关联起来.</p>",frontmatter:{title:"Java Thread Local",date:"November 20, 2017",tags:["java"]}}},pathContext:{path:"/java-thread-local"}}}});
//# sourceMappingURL=path---java-thread-local-b64779f7c0a8592f25b7.js.map